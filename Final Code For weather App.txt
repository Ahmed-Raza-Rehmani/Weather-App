import 'package:flutter/material.dart';
import 'package:flutter_weather_app/weather_app.dart';

void main(){
  runApp(const WeatherApp());
}
class WeatherApp extends StatelessWidget{
 const  WeatherApp({super.key});
@override
  Widget build(BuildContext context) {
  
    return  MaterialApp(
      	
      home: const WeatherScreen(),
      
      theme: ThemeData.light(useMaterial3: true),
           
      
      debugShowCheckedModeBanner: false,  
    );
  }
}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

import 'dart:convert';
import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:flutter_weather_app/additional_info.dart';
import 'package:flutter_weather_app/row_page.dart';
import 'package:flutter_weather_app/secret.dart';
import 'package:http/http.dart' as http;

class WeatherScreen extends StatefulWidget{
  const WeatherScreen({super.key});
  @override
  State<WeatherScreen> createState() => _WeatherScreenState();
}
class _WeatherScreenState extends State<WeatherScreen> {
   
  Future<Map<String,dynamic>> getCurrentWeather()   async {
    
    try {
      
     String cityName = 'Nawabshah';
      final res = await http.get(
     Uri.parse
     ( 'https://api.openweathermap.org/data/2.5/forecast?q=$cityName&APPID=$weatherAPIKey',),
     );
     final data = jsonDecode(res.body);
     
     if(data['cod']!='200'){
     throw 'an unexpected error occurred';
     }
     return data;
      
     }
     catch (e)
    {
      throw e.toString();
    }
  }
  @override
  Widget build(BuildContext context) {
    return  Scaffold(
      
   appBar: AppBar(
    centerTitle: true,
    title:
     const  Text('Weather App',
    style: TextStyle(
     fontSize: 25,
     fontWeight: FontWeight.w600,
    ),
    ),
    actions: [
      IconButton(onPressed: (){
        setState(() {
          
        });
      }, icon: const Icon(Icons.refresh),
      ),
    ],
   ),
   body:  FutureBuilder(
    future: getCurrentWeather(),
    builder: (context, snapshot) {
      print(snapshot);
      
          print(snapshot.runtimeType);
          if(snapshot.connectionState== ConnectionState.waiting){
            return 
           const  Center(child:  CircularProgressIndicator.adaptive());
          }
          if(snapshot.hasError){
            return Center(child: Text(snapshot.error.toString()));
          }
      final data = snapshot.data!;
      final currentWeatherData = data['list'][0];  
      final currrentTemp = (currentWeatherData['main']['temp'] - 273.15).toStringAsFixed(1);
       final currentSky = currentWeatherData['weather'][0]['main'];
       final currentPressure = currentWeatherData['main']['pressure'];
       final currentWindSpeed = (currentWeatherData['wind']['speed']*3.6).toStringAsFixed(1);
       final currentHumidity = currentWeatherData['main']['humidity'];

      return Padding(
       padding:  const EdgeInsets.all(8.0),
       child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
           SizedBox(
            width: double.infinity,
             child: Card(
              elevation: 10,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(15),
              ),
               child: ClipRRect(
                 borderRadius: BorderRadius.circular(15),
                 child: BackdropFilter(
                  filter: ImageFilter.blur(sigmaX: 10,sigmaY: 10),
                   child:   Padding(
                     padding:  const EdgeInsets.all(8.0),
                     child: Column(
                      children: [
                                        
                         Text('$currrentTemp Â°C' ,
                        style: const TextStyle(
                          fontSize: 32,
                          fontWeight: FontWeight.bold,
                        ) ,
                        
                        ),
                         const SizedBox(height: 15,),
                          Icon(
                         currentSky == 'Clouds' || currentSky == 'Rain' ?  Icons.cloudy_snowing :Icons.sunny,
                          color: Colors.black,
                          size: 65,
                        ),
                         const SizedBox(
                          height: 15,
                        ),
                          Text(currentSky,
                         style: 
                         const TextStyle(
                          fontSize: 20,
                          fontWeight: FontWeight.bold,
                        ),
                        ),
                      ],
                     ),
                   ),
                 ),
               ),
             ),
           ),
           const SizedBox(height: 10,),
           const Text('Hourly Forecast',
           style: TextStyle(
            fontSize: 25,
            fontWeight: FontWeight.bold,
           ),
           ),
           const SizedBox(height: 7,),
            SizedBox(
              height: 120,
              child: ListView.builder(
                itemCount: 5,
                  scrollDirection: Axis.horizontal,
                itemBuilder: (context, index){
                final hourlyForecast = data['list'][index+1];
                final hourlySky = data['list'][index + 1]['weather'][0]['main'];
                final hourlyTemp = (hourlyForecast['main']['temp'] - 273.15).toStringAsFixed(1);
                final time = DateTime.parse(hourlyForecast['dt_txt']);
                return  Rowgape(
                  time: DateFormat.j().format(time),
                  temperature: hourlyTemp.toString(), 
                  icon:hourlySky == 'Clouds' || currentSky == 'Rain' ?
                    Icons.cloudy_snowing :Icons.sunny, 
                 );
              } 
              ),
            ),
             const SizedBox(height: 10,),
           const Text('Additional Information',
           style:
            TextStyle(fontSize: 25,fontWeight: FontWeight.bold),
           ),
           const SizedBox(height: 10,),
            Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: [
              AdditionalInfo(
                icon: Icons.water_drop_rounded,
                label: 'Humidity',
                value: currentHumidity.toString(),
              ),
              AdditionalInfo(
                icon: Icons.air_rounded,
                label: 'Wind Speed',
                value: ("$currentWindSpeed km/h").toString(),
              ),
              AdditionalInfo(
                icon: Icons.beach_access,
                label: 'Pressure',
                value: "$currentPressure mb".toString(),
              ),
              
            ],
           )
        ],
       ),
     );
    },
   ),
    );
  }
}
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
const weatherAPIKey = 'f64b504e0519acf0cad5bdc952b0d6cc';
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
import 'package:flutter/material.dart';
class AdditionalInfo extends StatelessWidget{
    final IconData icon;
    final label;
    final String value;
  const AdditionalInfo({super.key,
  required this.icon,
  required this.label,
  required this.value,
  });
  @override
  Widget build(BuildContext context) {
    return   Column(
      children: [
               
               
                
                Icon(
                  icon,
                size: 32,
                ),

            const   SizedBox(height: 5,),
              Text(label),
              
              const SizedBox(height: 5,),
               Text(
                value,
              style:
               const TextStyle(fontSize: 20,
               fontWeight: FontWeight.bold),
               ),
               
                
               
            ],
            );
    
  }
}
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
import 'package:flutter/material.dart';

class Rowgape extends StatelessWidget{
 final String time;
    final String temperature;
    final IconData icon;
  
  const Rowgape({super.key,
  required this.time,
  required this.temperature,
  required this.icon,
  });
  @override

  Widget build(BuildContext context) {
    return
 Card(
            elevation: 10,
            child: Container(
              width:100,
              
              padding: const EdgeInsets.all(10),
              child:  Column(
                children: [
                  Text((time),
                  style: const TextStyle(
                    fontSize: 18,
                    fontWeight:  FontWeight.bold,

                  ),
                  maxLines: 1,
                  overflow: TextOverflow.ellipsis,
                  ),
                   const SizedBox(height: 5,),
                          Text(temperature,
                  style: const TextStyle(
                    fontSize: 15,
                    
                  ),
                  ),
                  const SizedBox(height: 5,),
                   Icon(icon,
                   color:  Colors.black,
                 size: 32,),
                 
                 
                ],
                
              ),
              
            ),
          );    
  }
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++